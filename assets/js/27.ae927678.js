(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{229:function(a,s,t){"use strict";t.r(s);var n=t(0),e=Object(n.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"linux-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-入门","aria-hidden":"true"}},[a._v("#")]),a._v(" Linux 入门")]),a._v(" "),t("h3",{attrs:{id:"ssh-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-安装","aria-hidden":"true"}},[a._v("#")]),a._v(" SSH 安装")]),a._v(" "),t("p",[a._v("为了方便的连接远程服务器，先安装一个 SSH，没有 Mac，Windows 推荐这个 "),t("a",{attrs:{href:"https://mobaxterm.mobatek.net/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Mobaxterm"),t("OutboundLink")],1),a._v("。功能强大，也不花钱。")]),a._v(" "),t("h3",{attrs:{id:"在-centos-中-安装-node-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-centos-中-安装-node-js","aria-hidden":"true"}},[a._v("#")]),a._v(" 在 CentOS 中 安装 node.js")]),a._v(" "),t("h4",{attrs:{id:"_1-下载-node-js-安装包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载-node-js-安装包","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 下载 node.js 安装包")]),a._v(" "),t("ul",[t("li",[a._v("根目录新建一个 app 文件夹，用来存放应用程序。")]),a._v(" "),t("li",[a._v("进入 node.js 官网，复制 node.js 的 Linux x64 位下载链接，在 shell 中输入：")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://npm.taobao.org/mirrors/node/v12.16.1/node-v12.16.1-linux-x64.tar.xz\n")])])]),a._v(" "),t("p",[t("img",{attrs:{src:"/images/Linux/install-node.png",alt:"下载 node 安装包"}})]),a._v(" "),t("h4",{attrs:{id:"_2-解压-node-js-安装包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-解压-node-js-安装包","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 解压 node.js 安装包")]),a._v(" "),t("ul",[t("li",[a._v("下在完成后目录中多了一个 tar.xz 文件，下一步进行解压。")]),a._v(" "),t("li",[a._v("解压 tar.xz 的压缩包分为两步")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v(" // 第一步，解压 xz：\n xz -d node-v12.16.1-linux-x64.tar.xz \n\n // 第二步，解压 tar：\n "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf node-v12.16.1-linux-x64.tar\n")])])]),t("img",{attrs:{src:"/images/tar-node.jpg",width:"50%",alt:"解压 node 安装包"}}),a._v(" "),t("h4",{attrs:{id:"_3-建立软连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-建立软连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.  建立软连接")]),a._v(" "),t("p",[a._v("这里遇到个血坑，在使用"),t("code",[a._v("ln -s")]),a._v(" 建立软连接的时候，目标路径如果和源路径不同，则需要使用绝对路径，否则无法生效，所以建议在建立软连接的时候，总是使用绝对路径进行创建。")]),a._v(" "),t("ul",[t("li",[a._v("建立软件列命令：")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("// node\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -s /app/node-v12.16.1-linux-x64/bin/node /usr/local/bin\n// "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -s /app/node-v12.16.1-linux-x64/bin/npm /usr/local/bin\n")])])]),t("p",[a._v("建立完成后使用查看对应版本，出现版本号表示安装成功。\n"),t("img",{attrs:{src:"/image/Linux/node-npm-version.png",alt:"查看 node & npm 版本"}})]),a._v(" "),t("h3",{attrs:{id:"在-linux-中安装-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-linux-中安装-nginx","aria-hidden":"true"}},[a._v("#")]),a._v(" 在 Linux 中安装 nginx")]),a._v(" "),t("h4",{attrs:{id:"安装-nginx-的依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-nginx-的依赖","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 nginx 的依赖")]),a._v(" "),t("ul",[t("li",[a._v("安装 pcre")])]),a._v(" "),t("ol",[t("li",[a._v("在网上找到 pcre 安装包，下载并解压到目录中。")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("进入 pcre 目录，使用 ./configure 检查必要文件依赖，若出现 error，则安装对应依赖。")]),a._v(" "),t("li",[a._v("然后使用 make ** make install 进行编译安装。")]),a._v(" "),t("li",[a._v("安装之后使用 pcre-config --version 查看版本号")])]),a._v(" "),t("ul",[t("li",[a._v("安装 zlib")])]),a._v(" "),t("ol",[t("li",[a._v("方便起见直接使用 yum 命令：")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" zlib zlib-devel\n")])])]),t("ul",[t("li",[a._v("安装 gcc gcc-c++")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" gcc gcc-c++ \n")])])]),t("ul",[t("li",[a._v("安装 openssl")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" openssl openssl-devel\n")])])]),t("ul",[t("li",[a._v("安装 nginx")])]),a._v(" "),t("ol",[t("li",[a._v("下载并解压安装文件。")]),a._v(" "),t("li",[a._v("执行 ./configue 检查完整性")]),a._v(" "),t("li",[a._v("使用 make && make install 安装")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 相关命令如下：")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf\n./configue\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("h3",{attrs:{id:"防火墙相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防火墙相关命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 防火墙相关命令")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("// 查看防火墙是否运行\nfirewall-cmd --state\n// 查看/关闭/启动/禁止开机启动 防火墙\nsystemctl "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status/stop/start/disable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" firewalld.service\n// 防火墙开放 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8001")]),a._v(" 端口\nfirewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("端口号/tcp --permanent\n\n命令含义为：\n// –add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8001")]),a._v("/tcp "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#添加端口，格式为：端口/通讯协议")]),a._v("\n// –permanent "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#永久生效，没有此参数重启后失效")]),a._v("\n// 开启端口后，重启防火墙生效\nfirewall-cmd --reload\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);