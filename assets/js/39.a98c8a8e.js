(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{212:function(_,v,t){"use strict";t.r(v);var o=t(0),s=Object(o.a)({},function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"三次握手-四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三次握手-四次挥手","aria-hidden":"true"}},[_._v("#")]),_._v(" 三次握手 四次挥手")]),_._v(" "),t("h3",{attrs:{id:"三次握手策略："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三次握手策略：","aria-hidden":"true"}},[_._v("#")]),_._v(" 三次握手策略：")]),_._v(" "),t("blockquote",[t("p",[_._v("三次握手策略是为了确认双方的发送和接受能力，从而保证 TCP 连接的可靠性。")])]),_._v(" "),t("p",[_._v("刚开始客户端是 "),t("strong",[t("code",[_._v("closed")])]),_._v(" 状态，服务器端是 "),t("strong",[t("code",[_._v("listen")])]),_._v(" 状态。")]),_._v(" "),t("p",[t("strong",[_._v("第一次握手：")]),_._v(" 客户端向服务器端发送一个 "),t("strong",[t("code",[_._v("SYN")])]),_._v(" 包，并进入 "),t("strong",[t("code",[_._v("SYN_SEND")])]),_._v(" 状态。")]),_._v(" "),t("p",[t("strong",[_._v("第二次握手：")]),_._v(" 服务器端接收到 "),t("strong",[t("code",[_._v("SYN")])]),_._v(" 包，回复一个自己的 "),t("strong",[t("code",[_._v("SYN")])]),_._v(" 包以及 "),t("strong",[t("code",[_._v("ACK")])]),_._v(" 包（客户端的 SYN+1 ），并进入 "),t("strong",[t("code",[_._v("SYN_RECV")])]),_._v("。")]),_._v(" "),t("p",[t("strong",[_._v("第三次握手：")]),_._v(" 客户端接收到 "),t("strong",[t("code",[_._v("SYN + ACK")])]),_._v(" 包，回复一个 "),t("strong",[t("code",[_._v("ACK")])]),_._v(" 包（服务器端的 SYN+1），并进入 "),t("strong",[t("code",[_._v("establised")])]),_._v(" 状态。")]),_._v(" "),t("p",[t("strong",[_._v("最后：")]),_._v(" 服务器端接收到 "),t("strong",[t("code",[_._v("ACK")])]),_._v(" 包，进入 "),t("strong",[t("code",[_._v("establised")])]),_._v("，至此，三次握手完成，TCP 连接建立。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/images/NetWork/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png",alt:""}})]),_._v(" "),t("h3",{attrs:{id:"四次挥手："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手：","aria-hidden":"true"}},[_._v("#")]),_._v(" 四次挥手：")]),_._v(" "),t("ul",[t("li",[_._v("假设客户端先发起断开连接请求：")])]),_._v(" "),t("p",[t("strong",[_._v("第一次挥手：")]),_._v(" 客户端向服务器端 发送一个 "),t("strong",[t("code",[_._v("FIN")])]),_._v(" 包，并进入 "),t("strong",[t("code",[_._v("FIN_WAIT1")])]),_._v(" 状态。")]),_._v(" "),t("p",[t("strong",[_._v("第二次挥手：")]),_._v(" 服务器端接收到 "),t("strong",[t("code",[_._v("FIN")])]),_._v(" 包，回复一个 "),t("strong",[t("code",[_._v("ACK")])]),_._v(" 包（客户端的 FIN+1），并进入 "),t("strong",[t("code",[_._v("CLOSE_WAIT")])]),_._v(" 状态。")]),_._v(" "),t("blockquote",[t("p",[_._v("👆 此时需要等待被动断开连接的那一方数据发送完毕（这里是服务器端）。")])]),_._v(" "),t("p",[t("strong",[_._v("第三次挥手：")]),_._v(" 服务器端发送一个 "),t("strong",[t("code",[_._v("FIN")])]),_._v(" 包，并进入 "),t("strong",[t("code",[_._v("LAST_ACK")])]),_._v(" 状态。")]),_._v(" "),t("p",[t("strong",[_._v("第四次挥手：")]),_._v(" 客户端接收到 "),t("strong",[t("code",[_._v("FIN")])]),_._v(" 包，返回一个 "),t("strong",[t("code",[_._v("ACK")])]),_._v(" 包（服务器端的 FIN+1），并进入 "),t("strong",[t("code",[_._v("TIME_WAIT")])]),_._v(" 状态。")]),_._v(" "),t("p",[t("strong",[_._v("最后：")]),_._v(" 服务器端收到 "),t("strong",[t("code",[_._v("ACK")])]),_._v(" 包，关闭连接。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/images/NetWork/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.png",alt:""}})]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("第四次挥手时客户端进入 TIME_WAIT 状态而不是直接 CLOSE 状态的原因：")])])]),_._v(" "),t("p",[_._v("因为客户端必须确认服务器端已经接收到了 ACK 包，如果服务器端没有收到 ACK 包，就会在发送一次 FIN 包过来。\n然后客户端就知道之前的 ACK 包丢失了，就会重新发送一个 ACK 包。\nTIME_WAIT 的持续时间至少是一个报文的来回时间，如果超过了这个时间就进入 CLOSE 状态。")])])},[],!1,null,null,null);v.default=s.exports}}]);